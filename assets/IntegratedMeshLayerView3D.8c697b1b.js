import{bZ as v,b_ as _,gQ as m,gR as f,dF as T,ch as y,gS as l,J as c,bz as x,c2 as g,c3 as p,P as u,g as O,L as S,I as o,d as s,de as C,u as N}from"./vendor.d1b93dad.js";import{l as H}from"./I3SMeshView3D.27915feb.js";import"./I3SAttributeOverrides.83ff6dbd.js";import"./I3SNode.ea71e71d.js";import"./I3SUtil.ac6ffb58.js";import"./I3SBinaryReader.38718b9a.js";import"./SceneModification.48388138.js";import"./persistable.c226fb0d.js";import"./Graphics3DScaleVisibility.a06906ae.js";import"./optimizedFeatureQueryEngineAdapter.264950bf.js";import"./PooledRBush.74db5953.js";import"./quickselect.02d2bace.js";import"./SceneLayerWorker.b5b9f457.js";import"./attributeUtils.987422a2.js";const F=.2;let a=class extends H(v(_)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage,this._overlayTexOffset=f(-1,-1,-1,-1),this._overlayTexScale=T(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?F:1}setDrapingTextures(e){this._clearDrapingTexture(y.INNER),this._clearDrapingTexture(y.OUTER);for(const t of e){const i=t.index,r=t.extent,n=t.needsColorWithoutRasterImage?t.getValidTarget(l.ColorNoRasterImage):t.hasDrapedFeatureSource?t.getValidTarget(l.Color):null;if(c(n)&&x(r)>0){this._overlayTexOffset[2*i]=-r[0]/g(r),this._overlayTexOffset[2*i+1]=-r[1]/p(r),this._overlayTexScale[2*i]=1/g(r),this._overlayTexScale[2*i+1]=1/p(r);const h=t.getValidTarget(l.Highlight),d=t.getValidTarget(l.Water);this._overlayColor=n.getTexture(),this._overlayHighlight=h?h.getTexture():null,this._overlayNormal=d?d.getTexture():null}}this._forAllNodes(t=>c(t)&&this._collection.updateMaterial(t.objectHandle,i=>this._updateMaterialOverlay(i)))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),u)}_createLayerGraphic(){const e=new O;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),S(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>e,()=>this._modifications=e.toArray(),u),"modifications")}};o([s()],a.prototype,"layer",void 0),o([s({aliasOf:"layer"})],a.prototype,"i3slayer",void 0),o([s(C)],a.prototype,"updatingProgress",void 0),o([s({readOnly:!0,aliasOf:"_controller.updatingProgress"})],a.prototype,"updatingProgressValue",void 0),o([s({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],a.prototype,"lodFactor",void 0),o([s({readOnly:!0})],a.prototype,"progressiveLoadFactor",null),a=o([N("esri.views.3d.layers.SceneLayerView3D")],a);const j=a;export{j as default};
