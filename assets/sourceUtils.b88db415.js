import{gt as m,fj as g,ls as p,lt as y,lu as w,f4 as f}from"./vendor.f59113c8.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(t){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function d(e){return new b(e)}class q{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function G(e){return new q(e)}const u=new Set;function P(e,t,i,h=!1,a){u.clear();for(const s in i){const n=e.get(s);if(!n)continue;const l=i[s],r=v(n,l);if(r!==l&&a&&a.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:l,sanitizedValue:r}}),u.add(n.name),n&&(h||n.editable)){const c=y(n,r);if(c)return d(w(c,n,r));t[n.name]=r}}for(const s of e.requiredFields)if(!u.has(s.name))return d(`missing required field "${s.name}"`);return null}function v(e,t){let i=t;return typeof t=="string"&&m(e)?i=parseFloat(t):t!=null&&g(e)&&typeof t!="string"&&(i=String(t)),p(i)}let o;function S(e,t){if(!e||!f(t))return e;if("rings"in e||"paths"in e){if(!o)throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function j(){return o||(o=await import("./geometryEngineJSON.1eda2436.js"),o)}async function V(e,t){!f(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await j()}export{G as c,P as d,S as h,d as u,V as y};
