var b=Object.defineProperty,F=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var h=Object.getOwnPropertySymbols;var q=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var y=(t,e,r)=>e in t?b(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,l=(t,e)=>{for(var r in e||(e={}))q.call(e,r)&&y(t,r,e[r]);if(h)for(var r of h(e))N.call(e,r)&&y(t,r,e[r]);return t},m=(t,e)=>F(t,I(e));import{a as i,d as o,n as f,dt as _,bP as j,r as g,ek as J,ao as x,hQ as C,a8 as k,dp as D,fD as L,p7 as P,dv as V,d7 as T,bt as E,F as u,L as R}from"./vendor.f59113c8.js";import{c as $}from"./clientSideDefaults.e7270462.js";import"./QueryEngineCapabilities.650d7541.js";let a=class extends _{constructor(t){super(t),this.type="csv",this.refresh=j(async e=>{await this.load();const{extent:r,timeExtent:s}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=r,s&&(this.sourceJSON.timeInfo.timeExtent=[s.start,s.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=g(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const r=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return J.fromJSON(r)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const r=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:r.count,extent:x.fromJSON(r.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await C("CSVSourceWorker",{strategy:k("feature-layers-workers")?"dedicated":"local",signal:t});const{url:e,delimiter:r,fields:s,latitudeField:v,longitudeField:S,spatialReference:c,timeInfo:p}=this.loadOptions,d=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:r,fields:s==null?void 0:s.map(O=>O.toJSON()),latitudeField:v,longitudeField:S,spatialReference:c==null?void 0:c.toJSON(),timeInfo:p==null?void 0:p.toJSON()}},{signal:t});this.locationInfo=d.locationInfo,this.sourceJSON=d.layerDefinition,this.delimiter=d.delimiter}};i([o()],a.prototype,"type",void 0),i([o()],a.prototype,"loadOptions",void 0),i([o()],a.prototype,"customParameters",void 0),i([o()],a.prototype,"locationInfo",void 0),i([o()],a.prototype,"sourceJSON",void 0),i([o()],a.prototype,"delimiter",void 0),a=i([f("esri.layers.graphics.sources.CSVSource")],a);const w=a,W="CSVLayer";let n=class extends V{constructor(...t){super(...t),this.capabilities=$(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=T.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?l({url:t},e):t}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!(e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const e=E(t);this._set("url",e.path),e.query&&(this.customParameters=l(l({},this.customParameters),e.query))}async createGraphicsSource(t){const e=new w({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url},customParameters:this.customParameters});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(u.from(t)||this.createQuery())).then(r=>{if(r!=null&&r.features)for(const s of r.features)s.layer=s.sourceLayer=this;return r})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(u.from(t)||this.createQuery()))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(u.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(u.from(t)||this.createQuery()))}write(t,e){return super.write(t,m(l({},e),{writeLayerSchema:!0}))}clone(){throw new R(W,`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return g(e)&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([o({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"capabilities",void 0),i([o({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],n.prototype,"delimiter",void 0),i([o({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],n.prototype,"editingEnabled",void 0),i([o({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],n.prototype,"fields",void 0),i([o({type:Boolean,readOnly:!0})],n.prototype,"isTable",null),i([D("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],n.prototype,"readWebMapLabelsVisible",null),i([o({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],n.prototype,"latitudeField",void 0),i([o({type:["show","hide"]})],n.prototype,"listMode",void 0),i([o({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"locationType",void 0),i([o({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],n.prototype,"longitudeField",void 0),i([o({type:["CSV"]})],n.prototype,"operationalLayerType",void 0),i([o()],n.prototype,"outFields",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],n.prototype,"path",void 0),i([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],n.prototype,"portalItem",void 0),i([o({json:{read:!1},cast:null,type:w,readOnly:!0})],n.prototype,"source",void 0),i([o({json:{read:!1},value:"csv",readOnly:!0})],n.prototype,"type",void 0),i([o({json:{read:L,write:{isRequired:!0,ignoreOrigin:!0,writer:P}}})],n.prototype,"url",null),n=i([f("esri.layers.CSVLayer")],n);const G=n;export{G as default};
