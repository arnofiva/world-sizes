var v=Object.defineProperty,E=Object.defineProperties;var O=Object.getOwnPropertyDescriptors;var f=Object.getOwnPropertySymbols;var g=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var u=(i,e,s)=>e in i?v(i,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[e]=s,m=(i,e)=>{for(var s in e||(e={}))g.call(e,s)&&u(i,s,e[s]);if(f)for(var s of f(e))x.call(e,s)&&u(i,s,e[s]);return i},T=(i,e)=>E(i,O(e));import{a as C,n as M,y as I,r as R,cP as w,qt as b}from"./vendor.f59113c8.js";import{o as D}from"./definitions.9639b7e5.js";import{p as P,l as n}from"./tileUtils.82b27401.js";class o{constructor(e,s){this.offset=e,this.extent=s}}function q(i){const e=i.key,s=new Map,a=256,t=D,r=i.tileInfoView.tileInfo.isWrappable;return s.set(n(e,-1,-1,r).id,new o([-t,-t],[t-a,t-a,t,t])),s.set(n(e,0,-1,r).id,new o([0,-t],[0,t-a,t,t])),s.set(n(e,1,-1,r).id,new o([t,-t],[0,t-a,a,t])),s.set(n(e,-1,0,r).id,new o([-t,0],[t-a,0,t,t])),s.set(n(e,1,0,r).id,new o([t,0],[0,0,a,t])),s.set(n(e,-1,1,r).id,new o([-t,t],[t-a,0,t,a])),s.set(n(e,0,1,r).id,new o([0,t],[0,0,t,a])),s.set(n(e,1,1,r).id,new o([t,t],[0,0,a,a])),s}let c=class extends P{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}async update(i,e){const s=e.schema.processors[0];s.type==="heatmap"&&I(this._schema,s)&&(i.mesh=!0,this._schema=s)}onTileUpdate(i){for(const e of i.removed)this._tileKeyToFeatureSets.delete(e.key.id)}onTileClear(i){const e={clear:!0};return this._tileKeyToFeatureSets.delete(i.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:i.id,data:e})}async onTileMessage(i,e,s){this._tileKeyToFeatureSets.has(i.key.id)||this._tileKeyToFeatureSets.set(i.key.id,new Map);const a=this._tileKeyToFeatureSets.get(i.key.id);if(R(e.addOrUpdate)&&e.addOrUpdate.hasFeatures&&a.set(e.addOrUpdate.instance,e),e.end){const t=[],r=q(i);this._tileKeyToFeatureSets.forEach((y,d)=>{if(d===i.key.id)y.forEach(l=>w(l.addOrUpdate,h=>t.push(h)));else if(r.has(d)){const l=r.get(d),[h,_]=l.offset;y.forEach(F=>w(F.addOrUpdate,S=>{const U=S.transform(h,_,1,1);t.push(U)}))}});const p=b(t,this._schema.mesh,512,512),k={tileKey:i.key.id,intensityInfo:p},K=[p.matrix];return this.remoteClient.invoke("tileRenderer.onTileData",k,T(m({},s),{transferList:K}))}}onTileError(i,e,s){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:i.id,error:e},s)}};c=C([M("esri.views.2d.layers.features.processors.HeatmapProcessor")],c);const W=c;export{W as default};
