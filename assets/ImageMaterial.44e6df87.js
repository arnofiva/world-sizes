var C=Object.defineProperty;var f=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable;var v=(a,e,t)=>e in a?C(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,d=(a,e)=>{for(var t in e||(e={}))_.call(e,t)&&v(a,t,e[t]);if(f)for(var t of f(e))$.call(e,t)&&v(a,t,e[t]);return a};import{c3 as A,c4 as O,bO as T,c5 as l,c6 as x,c7 as S,c8 as F,c9 as i,ca as b,cb as D,cc as w,cd as E,a as n,ce as o,cf as g,cg as u,ch as N,ci as q,cj as H,ck as I,cl as R,cm as U,cn as G,co as L,cp as M,cq as W,cr as j,cs as z,ct as B,cu as V,cv as Q,cw as k,cx as J,cy as K,cz as X,cA as Y,cB as Z,cC as ee,cD as te,cE as ae,cF as p,cG as se,cH as re,cI as ie,cJ as ne}from"./vendor.f59113c8.js";function oe(a){const e=new A;return e.include(O,{linearDepth:!1}),e.vertex.uniforms.add("proj","mat4").add("view","mat4"),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vpos","vec3"),a.multipassTerrainEnabled&&e.varyings.add("depth","float"),e.vertex.uniforms.add("textureCoordinateScaleFactor","vec2"),e.vertex.code.add(l`
    void main(void) {
      vpos = position;
      ${a.multipassTerrainEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      vTexCoord = uv0 * textureCoordinateScaleFactor;
      gl_Position = transformPosition(proj, view, vpos);
    }
  `),e.include(x,a),a.multipassTerrainEnabled&&(e.fragment.include(S),e.include(F,a)),e.fragment.uniforms.add("tex","sampler2D"),e.fragment.uniforms.add("opacity","float"),e.varyings.add("vTexCoord","vec2"),a.output===i.Alpha?e.fragment.code.add(l`
    void main() {
      discardBySlice(vpos);
      ${a.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}

      float alpha = texture2D(tex, vTexCoord).a * opacity;
      if (alpha  < ${l.float(b)}) {
        discard;
      }

      gl_FragColor = vec4(alpha);
    }
    `):(e.fragment.include(D),e.fragment.code.add(l`
    void main() {
      discardBySlice(vpos);
      ${a.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      gl_FragColor = texture2D(tex, vTexCoord) * opacity;

      if (gl_FragColor.a < ${l.float(b)}) {
        discard;
      }

      gl_FragColor = highlightSlice(gl_FragColor, vpos);
      ${a.oitEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
    `)),e}const ce=Object.freeze({__proto__:null,build:oe});class h extends H{initializeProgram(e){const t=h.shader.get(),s=this.configuration,c=t.build({output:s.output,slicePlaneEnabled:s.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,oitEnabled:s.transparencyPassType===u.Color,multipassTerrainEnabled:s.multipassTerrainEnabled,cullAboveGround:s.cullAboveGround});return new I(e.rctx,c,R)}bindPass(e,t){U(this.program,t.camera.projectionMatrix),this.program.setUniform1f("opacity",e.opacity),t.multipassTerrainEnabled&&(this.program.setUniform2fv("nearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),G(this.program,t))}bindDraw(e){L(this.program,e),M(this.program,this.configuration,e),this.program.rebindTextures()}_setPipelineState(e,t){const s=this.configuration,c=e===u.NONE,m=e===u.FrontFace;return W({blending:s.output!==i.Color&&s.output!==i.Alpha||!s.transparent?null:c?le:j(e),culling:z(s.cullFace),depthTest:{func:B(e)},depthWrite:c?s.writeDepth&&V:Q(e),colorWrite:k,stencilWrite:s.sceneHasOcludees?J:null,stencilTest:s.sceneHasOcludees?t?K:X:null,polygonOffset:c||m?null:Y(s.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}h.shader=new q(ce,()=>import("./ImageMaterial.glsl.41895705.js"));const le=w(E.ONE,E.ONE_MINUS_SRC_ALPHA);class r extends N{constructor(){super(...arguments),this.output=i.Color,this.cullFace=g.None,this.slicePlaneEnabled=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparencyPassType=u.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}n([o({count:i.COUNT})],r.prototype,"output",void 0),n([o({count:g.COUNT})],r.prototype,"cullFace",void 0),n([o()],r.prototype,"slicePlaneEnabled",void 0),n([o()],r.prototype,"transparent",void 0),n([o()],r.prototype,"enableOffset",void 0),n([o()],r.prototype,"writeDepth",void 0),n([o()],r.prototype,"sceneHasOcludees",void 0),n([o({count:u.COUNT})],r.prototype,"transparencyPassType",void 0),n([o()],r.prototype,"multipassTerrainEnabled",void 0),n([o()],r.prototype,"cullAboveGround",void 0);class me extends ee{constructor(e){super(e,ue),this.supportsEdges=!0,this.techniqueConfig=new r}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.parameters.cullFace,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.enableOffset=t.camera.relativeElevation<te,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig}intersect(e,t,s,c,m,P,y){ae(e,t,c,m,P,void 0,y)}requiresSlot(e,t){return e===p.DRAPED_MATERIAL?!0:se(t)===i.Highlight?e===p.OPAQUE_MATERIAL:e===(this.parameters.transparent?this.parameters.writeDepth?p.TRANSPARENT_MATERIAL:p.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:p.OPAQUE_MATERIAL)}createGLMaterial(e){return e.output===i.Color||e.output===i.Alpha||e.output===i.Highlight?new pe(e):void 0}createBufferWriter(){return new re(ie)}}class pe extends ne{constructor(e){super(d(d({},e),e.material.parameters))}updateParameters(e){const t=this._material.parameters;return this.updateTexture(t.textureId),this.ensureTechnique(h,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&(this._material.setParameters({sceneHasOcludees:e.hasOccludees}),this.updateParameters(e))}beginSlot(e){return this._output!==i.Color&&this._output!==i.Alpha||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){this.bindTextures(t.program),this.bindTextureScale(t.program),t.bindPass(this._material.parameters,e)}}const ue=d({transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:g.None,sceneHasOcludees:!1,opacity:1,textureId:null,initTextureTransparent:!0},Z);export{oe as g,me as m};
