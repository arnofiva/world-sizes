var Tt=Object.defineProperty,St=Object.defineProperties;var gt=Object.getOwnPropertyDescriptors;var Ye=Object.getOwnPropertySymbols;var wt=Object.prototype.hasOwnProperty,Nt=Object.prototype.propertyIsEnumerable;var Xe=(e,i,s)=>i in e?Tt(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s,H=(e,i)=>{for(var s in i||(i={}))wt.call(i,s)&&Xe(e,s,i[s]);if(Ye)for(var s of Ye(i))Nt.call(i,s)&&Xe(e,s,i[s]);return e},Y=(e,i)=>St(e,gt(i));import{a as t,d as r,q8 as N,n as V,en as k,pe as xe,pg as X,S as Ot,bC as ue,dA as J,r as o,mn as ie,a$ as x,dp as c,aS as pe,t as S,eW as U,em as fe,v as at,dB as me,d7 as te,pz as Ct,G as P,aa as It,oU as Dt,oV as Ft,km as At,kn as Bt,ko as jt,cL as Et,C as xt,H as Jt,oG as Lt,bB as Pt,ao as Mt,fa as _t,kJ as Qe,pS as Wt,L as z,bt as Ut,bq as Vt,bs as $t,p6 as Rt,q9 as kt,qa as qt,g as Gt,j6 as zt,bu as Kt,bv as Zt}from"./vendor.f59113c8.js";import{y as Fe,p as Ae,h as M,m as C,A as ce,b as Be,N as Q,l as lt,t as nt,s as Ht,r as Yt,n as Xt,c as Qt,e as he,f as ei,g as ti}from"./NAMessage.c5a261f3.js";import{p as ii}from"./route.5cd4e4b3.js";import"./GPMessage.47e7ec28.js";import"./DirectionsFeatureSet.7c92d576.js";let B=class extends k{constructor(){super(...arguments),this.directionLines=new xe({color:[0,122,194],width:6}),this.directionPoints=new X({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new X({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new Ot({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new xe({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new xe({width:8,color:[20,89,127]}),this.firstStop=new X({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.middleStop=new X({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.lastStop=new X({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.invalidStop=new X({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.waypointStop=new X({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.breakStop=new X({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};t([r({nonNullable:!0,types:N})],B.prototype,"directionLines",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"directionPoints",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"pointBarriers",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"polygonBarriers",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"polylineBarriers",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"routeInfo",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"firstStop",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"middleStop",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"lastStop",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"invalidStop",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"waypointStop",void 0),t([r({nonNullable:!0,types:N})],B.prototype,"breakStop",void 0),B=t([V("esri.layers.support.DefaultSymbols")],B);const ut=B;var Pe;let j=Pe=class extends k{constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null}static fromPortalJSON(e){var i,s;return new Pe({directionLineType:Fe.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:(i=e.attributes.FromLevel)!=null?i:null,geometry:ue.fromJSON(e.geometry),objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,symbol:o(e.symbol)?ie(e.symbol):null,toLevel:(s=e.attributes.ToLevel)!=null?s:null})}toPortalJSON(){const e={geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),DirectionLineType:o(this.directionLineType)?Fe.toJSON(this.directionLineType):null,DirectionPointID:x(this.directionPointId),Meters:x(this.distance),Minutes:x(this.duration)},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null};return o(this.fromLevel)&&(e.attributes.FromLevel=this.fromLevel),o(this.toLevel)&&(e.attributes.ToLevel=this.toLevel),e}};j.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],j.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:Fe.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:Fe.read}}})],j.prototype,"directionLineType",void 0),t([r({json:{read:{source:"attributes.DirectionPointID"}}})],j.prototype,"directionPointId",void 0),t([r({json:{read:{source:"attributes.Meters"}}})],j.prototype,"distance",void 0),t([r({json:{read:{source:"attributes.Minutes"}}})],j.prototype,"duration",void 0),t([r({json:{read:{source:"attributes.FromLevel"}}})],j.prototype,"fromLevel",void 0),t([r({type:ue})],j.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],j.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],j.prototype,"popupTemplate",void 0),t([r({types:N,json:{read:!1}})],j.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.ToLevel"}}})],j.prototype,"toLevel",void 0),j=Pe=t([V("esri.rest.support.DirectionLine")],j);const be=j;var Me;let h=Me=class extends k{constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.voiceInstruction=null}readArrivalTime(e,i){return o(i.attributes.ArrivalTime)?new Date(i.attributes.ArrivalTime):null}static fromPortalJSON(e){var i,s,n,a,b,y,w,v,D,I,F,O,T;return new Me({alternateName:(i=e.attributes.AlternateName)!=null?i:null,arrivalTime:o(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:(s=e.attributes.ArrivalUTCOffset)!=null?s:null,azimuth:(n=e.attributes.Azimuth)!=null?n:null,branchName:(a=e.attributes.BranchName)!=null?a:null,directionPointType:Ae.fromJSON(e.attributes.DirectionPointType),displayText:(b=e.attributes.DisplayText)!=null?b:null,exitName:(y=e.attributes.ExitName)!=null?y:null,geometry:pe.fromJSON(e.geometry),intersectingName:(w=e.attributes.IntersectingName)!=null?w:null,level:(v=e.attributes.Level)!=null?v:null,name:(D=e.attributes.Name)!=null?D:null,objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,sequence:e.attributes.Sequence,shortVoiceInstruction:(I=e.attributes.ShortVoiceInstruction)!=null?I:null,stopId:(F=e.attributes.StopID)!=null?F:null,symbol:o(e.symbol)?ie(e.symbol):null,towardName:(O=e.attributes.TowardName)!=null?O:null,voiceInstruction:(T=e.attributes.VoiceInstruction)!=null?T:null})}toPortalJSON(){const e={geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),DirectionPointType:o(this.directionPointType)?Ae.toJSON(this.directionPointType):null,Sequence:x(this.sequence),StopID:this.stopId},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null};return o(this.alternateName)&&(e.attributes.AlternateName=this.alternateName),o(this.arrivalTime)&&(e.attributes.ArrivalTime=this.arrivalTime.getTime()),o(this.arrivalTimeOffset)&&(e.attributes.ArrivalUTCOffset=this.arrivalTimeOffset),o(this.azimuth)&&(e.attributes.Azimuth=this.azimuth),o(this.branchName)&&(e.attributes.BranchName=this.branchName),o(this.displayText)&&(e.attributes.DisplayText=this.displayText),o(this.exitName)&&(e.attributes.ExitName=this.exitName),o(this.intersectingName)&&(e.attributes.IntersectingName=this.intersectingName),o(this.level)&&(e.attributes.Level=this.level),o(this.name)&&(e.attributes.Name=this.name),o(this.shortVoiceInstruction)&&(e.attributes.ShortVoiceInstruction=this.shortVoiceInstruction),o(this.towardName)&&(e.attributes.TowardName=this.towardName),o(this.voiceInstruction)&&(e.attributes.VoiceInstruction=this.voiceInstruction),e}};h.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],h.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],h.prototype,"alternateName",void 0),t([r()],h.prototype,"arrivalTime",void 0),t([c("arrivalTime",["attributes.ArrivalTime"])],h.prototype,"readArrivalTime",null),t([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],h.prototype,"arrivalTimeOffset",void 0),t([r({json:{read:{source:"attributes.Azimuth"}}})],h.prototype,"azimuth",void 0),t([r({json:{read:{source:"attributes.BranchName"}}})],h.prototype,"branchName",void 0),t([r({type:Ae.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:Ae.read}}})],h.prototype,"directionPointType",void 0),t([r({json:{read:{source:"attributes.DisplayText"}}})],h.prototype,"displayText",void 0),t([r({json:{read:{source:"attributes.ExitName"}}})],h.prototype,"exitName",void 0),t([r({type:pe})],h.prototype,"geometry",void 0),t([r({json:{read:!1}})],h.prototype,"intersectingName",void 0),t([r({json:{read:!1}})],h.prototype,"level",void 0),t([r({json:{read:{source:"attributes.Name"}}})],h.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],h.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],h.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.Sequence"}}})],h.prototype,"sequence",void 0),t([r({json:{read:!1}})],h.prototype,"shortVoiceInstruction",void 0),t([r({json:{read:{source:"attributes.StopID"}}})],h.prototype,"stopId",void 0),t([r({types:N,json:{read:!1}})],h.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.TowardName"}}})],h.prototype,"towardName",void 0),t([r({json:{read:!1}})],h.prototype,"voiceInstruction",void 0),h=Me=t([V("esri.rest.support.DirectionPoint")],h);const ye=h;function R(e,i){if(S(e))return null;const s={},n=new RegExp(`^${i}`,"i");for(const a in e)e.hasOwnProperty(a)&&n.test(a)&&(s[a.substring(i.length)]=e[a]);return s}function je(e,i){return S(e)||S(i)?null:Math.round((e-i)/6e4)}var Ne;let g=Ne=class extends k{constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null}readCosts(e,i){return R(i.attributes,"Attr_")}writeCosts(e,i){if(!S(e)){i.attributes||(i.attributes={});for(const s in e)i.attributes[`Attr_${s}`]=e[s]}}static fromPortalJSON(e){var i,s;return new Ne({addedCost:(i=e.attributes.AddedCost)!=null?i:null,barrierType:o(e.attributes.BarrierType)?M.fromJSON(e.attributes.BarrierType):null,costs:o(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,curbApproach:o(e.attributes.CurbApproach)?C.fromJSON(e.attributes.CurbApproach):null,fullEdge:o(e.attributes.FullEdge)?ce.fromJSON(e.attributes.FullEdge):null,geometry:pe.fromJSON(e.geometry),name:(s=e.attributes.Name)!=null?s:null,objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,status:o(e.attributes.Status)?Q.fromJSON(e.attributes.Status):null,symbol:o(e.symbol)?ie(e.symbol):null})}clone(){return new Ne(fe({addedCost:this.addedCost,barrierType:this.barrierType,costs:this.costs,curbApproach:this.curbApproach,fullEdge:this.fullEdge,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,sideOfEdge:this.sideOfEdge,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol}))}toPortalJSON(){return{geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),AddedCost:this.addedCost,BarrierType:o(this.barrierType)?M.toJSON(this.barrierType):null,Costs:o(this.costs)?JSON.stringify(this.costs):null,CurbApproach:o(this.curbApproach)?C.toJSON(this.curbApproach):null,FullEdge:o(this.fullEdge)?ce.toJSON(this.fullEdge):null,Name:this.name,Status:o(this.status)?Q.toJSON(this.status):null},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null}}};g.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],g.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],g.prototype,"addedCost",void 0),t([r({type:M.apiValues,json:{name:"attributes.BarrierType",read:{reader:M.read},write:{writer:M.write}}})],g.prototype,"barrierType",void 0),t([r()],g.prototype,"costs",void 0),t([c("costs",["attributes"])],g.prototype,"readCosts",null),t([U("costs")],g.prototype,"writeCosts",null),t([r({type:C.apiValues,json:{read:{source:"attributes.CurbApproach",reader:C.read}}})],g.prototype,"curbApproach",void 0),t([r({type:ce.apiValues,json:{name:"attributes.FullEdge",read:{reader:ce.read},write:{writer:ce.write}}})],g.prototype,"fullEdge",void 0),t([r({type:pe,json:{write:!0}})],g.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name",write:!0}})],g.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID",write:!0}})],g.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],g.prototype,"popupTemplate",void 0),t([r({type:Be.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Be.read}}})],g.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],g.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],g.prototype,"sourceOid",void 0),t([r({type:Q.apiValues,json:{read:{source:"attributes.Status",reader:Q.read}}})],g.prototype,"status",void 0),t([r({types:N,json:{read:!1}})],g.prototype,"symbol",void 0),g=Ne=t([V("esri.rest.support.PointBarrier")],g);const se=g;var Oe;let E=Oe=class extends k{constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,i){return R(i.attributes,"Attr_")}writeCosts(e,i){if(!S(e)){i.attributes||(i.attributes={});for(const s in e)i.attributes[`Attr_${s}`]=e[s]}}static fromPortalJSON(e){var i,s;return new Oe({barrierType:o(e.attributes.BarrierType)?M.fromJSON(e.attributes.BarrierType):null,costs:o(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,geometry:at.fromJSON(e.geometry),name:(i=e.attributes.Name)!=null?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,scaleFactor:(s=e.attributes.ScaleFactor)!=null?s:null,symbol:o(e.symbol)?ie(e.symbol):null})}clone(){return new Oe(fe({barrierType:this.barrierType,costs:this.costs,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,scaleFactor:this.scaleFactor,symbol:this.symbol}))}toPortalJSON(){var e,i;return{geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),BarrierType:o(this.barrierType)?M.toJSON(this.barrierType):null,Costs:o(this.costs)?JSON.stringify(this.costs):null,Name:(e=this.name)!=null?e:null,ScaleFactor:(i=this.scaleFactor)!=null?i:null},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null}}};E.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],E.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:M.apiValues,json:{name:"attributes.BarrierType",read:{reader:M.read},write:{writer:M.write}}})],E.prototype,"barrierType",void 0),t([r()],E.prototype,"costs",void 0),t([c("costs",["attributes"])],E.prototype,"readCosts",null),t([U("costs")],E.prototype,"writeCosts",null),t([r({type:at,json:{write:!0}})],E.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name",write:!0}})],E.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID",write:!0}})],E.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],E.prototype,"popupTemplate",void 0),t([r({json:{read:!1}})],E.prototype,"scaleFactor",void 0),t([r({types:N,json:{read:!1}})],E.prototype,"symbol",void 0),E=Oe=t([V("esri.rest.support.PolygonBarrier")],E);const ae=E;var Ce;let L=Ce=class extends k{constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,i){return R(i.attributes,"Attr_")}static fromPortalJSON(e){var i,s;return new Ce({barrierType:o(e.attributes.BarrierType)?M.fromJSON(e.attributes.BarrierType):null,costs:o(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,geometry:ue.fromJSON(e.geometry),name:(i=e.attributes.Name)!=null?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,scaleFactor:(s=e.attributes.ScaleFactor)!=null?s:null,symbol:o(e.symbol)?ie(e.symbol):null})}clone(){return new Ce(fe({barrierType:this.barrierType,costs:this.costs,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,scaleFactor:this.scaleFactor,symbol:this.symbol}))}toPortalJSON(){return{geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),BarrierType:o(this.barrierType)?M.toJSON(this.barrierType):null,Costs:o(this.costs)?JSON.stringify(this.costs):null,Name:this.name,ScaleFactor:this.scaleFactor},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null}}};L.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],L.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:M.apiValues,json:{read:{source:"attributes.BarrierType",reader:M.read}}})],L.prototype,"barrierType",void 0),t([r()],L.prototype,"costs",void 0),t([c("costs",["attributes"])],L.prototype,"readCosts",null),t([r({type:ue,json:{write:!0}})],L.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name",write:!0}})],L.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID",write:!0}})],L.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],L.prototype,"popupTemplate",void 0),t([r({json:{read:!1}})],L.prototype,"scaleFactor",void 0),t([r({types:N,json:{read:!1}})],L.prototype,"symbol",void 0),L=Ce=t([V("esri.rest.support.PolylineBarrier")],L);const le=L;let W=class extends k{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}};t([r({type:[String],json:{read:{source:"accumulateAttributeNames"},write:{target:"accumulateAttributeNames"}}})],W.prototype,"accumulateAttributes",void 0),t([r({type:String,json:{write:!0}})],W.prototype,"directionsLanguage",void 0),t([r({type:Boolean,json:{write:!0}})],W.prototype,"findBestSequence",void 0),t([r({type:Boolean,json:{write:!0}})],W.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],W.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],W.prototype,"startTimeIsUTC",void 0),t([r({type:Boolean,json:{write:!0}})],W.prototype,"timeWindowsAreUTC",void 0),t([r({type:lt,json:{write:!0}})],W.prototype,"travelMode",void 0),W=t([V("esri.layers.support.RouteSettings")],W);const pt=W;var _e;let m=_e=class extends k{constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.version="1.0.0"}readEndTime(e,i){return o(i.attributes.EndTimeUTC)?new Date(i.attributes.EndTimeUTC):null}readEndTimeOffset(e,i){return je(i.attributes.EndTime,i.attributes.EndTimeUTC)}readStartTime(e,i){return o(i.attributes.StartTimeUTC)?new Date(i.attributes.StartTimeUTC):null}readStartTimeOffset(e,i){return je(i.attributes.StartTime,i.attributes.StartTimeUTC)}readTotalCosts(e,i){return R(i.attributes,"Total_")}readTotalViolations(e,i){return R(i.attributes,"TotalViolation_")}readTotalWait(e,i){return R(i.attributes,"TotalWait_")}static fromPortalJSON(e){var i,s,n,a,b,y;return new _e({analysisSettings:o(e.attributes.AnalysisSettings)?pt.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:o(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:(i=e.attributes.EndUTCOffset)!=null?i:null,geometry:ue.fromJSON(e.geometry),messages:o(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,startTime:o(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:(s=e.attributes.StartUTCOffset)!=null?s:null,symbol:o(e.symbol)?ie(e.symbol):null,totalCosts:o(e.attributes.TotalCosts)?JSON.parse(e.attributes.TotalCosts):null,totalDistance:(n=e.attributes.TotalMeters)!=null?n:null,totalDuration:(a=e.attributes.TotalMinutes)!=null?a:null,totalLateDuration:(b=e.attributes.TotalLateMinutes)!=null?b:null,totalWaitDuration:(y=e.attributes.TotalWaitMinutes)!=null?y:null,version:e.attributes.Version})}toPortalJSON(){return{geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),AnalysisSettings:o(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:o(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:o(this.messages)?JSON.stringify(this.messages):null,RouteName:x(this.name),StartTime:o(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:o(this.totalCosts)?JSON.stringify(this.totalCosts):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:x(this.version)},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null}}};m.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],m.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],m.prototype,"analysisSettings",void 0),t([r()],m.prototype,"endTime",void 0),t([c("endTime",["attributes.EndTimeUTC"])],m.prototype,"readEndTime",null),t([r()],m.prototype,"endTimeOffset",void 0),t([c("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],m.prototype,"readEndTimeOffset",null),t([r({json:{read:{source:"attributes.FirstStopID"}}})],m.prototype,"firstStopId",void 0),t([r({type:ue})],m.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.LastStopID"}}})],m.prototype,"lastStopId",void 0),t([r({json:{read:!1}})],m.prototype,"messages",void 0),t([r({json:{read:{source:"attributes.Name"}}})],m.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],m.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],m.prototype,"popupTemplate",void 0),t([r()],m.prototype,"startTime",void 0),t([c("startTime",["attributes.StartTimeUTC"])],m.prototype,"readStartTime",null),t([r()],m.prototype,"startTimeOffset",void 0),t([c("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],m.prototype,"readStartTimeOffset",null),t([r({json:{read:{source:"attributes.StopCount"}}})],m.prototype,"stopCount",void 0),t([r({types:N,json:{read:!1}})],m.prototype,"symbol",void 0),t([r()],m.prototype,"totalCosts",void 0),t([c("totalCosts",["attributes"])],m.prototype,"readTotalCosts",null),t([r({json:{read:!1}})],m.prototype,"totalDistance",void 0),t([r({json:{read:!1}})],m.prototype,"totalDuration",void 0),t([r({json:{read:!1}})],m.prototype,"totalLateDuration",void 0),t([r()],m.prototype,"totalViolations",void 0),t([c("totalViolations",["attributes"])],m.prototype,"readTotalViolations",null),t([r()],m.prototype,"totalWait",void 0),t([c("totalWait",["attributes"])],m.prototype,"readTotalWait",null),t([r({json:{read:!1}})],m.prototype,"totalWaitDuration",void 0),t([r({json:{read:!1}})],m.prototype,"version",void 0),m=_e=t([V("esri.rest.support.RouteInfo")],m);const ge=m,ri={type:String,json:{read:{source:"token"},write:{target:"token"}}};var Ie;let p=Ie=class extends k{constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return Ct(Ie,e)}writePointBarriers(e,i,s){this._writeNetworkFeatures(e,i,s)}writePolygonBarrier(e,i,s){this._writeNetworkFeatures(e,i,s)}writePolylineBarrier(e,i,s){this._writeNetworkFeatures(e,i,s)}readStartTime(e,i){return i.startTime!=null?new Date(i.startTime):null}writeStartTime(e,i){i.startTime=e?e.getTime():null}writeStops(e,i,s){this._writeNetworkFeatures(e,i,s)}clone(){return new Ie(fe({accumulateAttributes:this.accumulateAttributes,apiKey:this.apiKey,attributeParameterValues:this.attributeParameterValues,directionsLanguage:this.directionsLanguage,directionsLengthUnits:this.directionsLengthUnits,directionsOutputType:this.directionsOutputType,directionsStyleName:this.directionsStyleName,directionsTimeAttribute:this.directionsTimeAttribute,findBestSequence:this.findBestSequence,ignoreInvalidLocations:this.ignoreInvalidLocations,impedanceAttribute:this.impedanceAttribute,outputGeometryPrecision:this.outputGeometryPrecision,outputGeometryPrecisionUnits:this.outputGeometryPrecisionUnits,outputLines:this.outputLines,outSpatialReference:this.outSpatialReference,pointBarriers:this.pointBarriers,polygonBarriers:this.polygonBarriers,polylineBarriers:this.polylineBarriers,preserveFirstStop:this.preserveFirstStop,preserveLastStop:this.preserveLastStop,restrictionAttributes:this.restrictionAttributes,restrictUTurns:this.restrictUTurns,returnBarriers:this.returnBarriers,returnDirections:this.returnDirections,returnPolygonBarriers:this.returnPolygonBarriers,returnPolylineBarriers:this.returnPolylineBarriers,returnRoutes:this.returnRoutes,returnStops:this.returnStops,returnZ:this.returnZ,startTime:this.startTime,startTimeIsUTC:this.startTimeIsUTC,stops:this.stops,timeWindowsAreUTC:this.timeWindowsAreUTC,travelMode:this.travelMode,useHierarchy:this.useHierarchy,useTimeWindows:this.useTimeWindows}))}_writeNetworkFeatures(e,i,s){i[s]=P.isCollection(e)?{features:e.toArray().map(n=>n.toJSON())}:e.toJSON()}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],p.prototype,"accumulateAttributes",void 0),t([r(ri)],p.prototype,"apiKey",void 0),t([r({json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],p.prototype,"directionsLanguage",void 0),t([me(nt)],p.prototype,"directionsLengthUnits",void 0),t([me(Ht)],p.prototype,"directionsOutputType",void 0),t([r({type:String,json:{write:!0}})],p.prototype,"directionsStyleName",void 0),t([r({type:String,json:{write:!0}})],p.prototype,"directionsTimeAttribute",void 0),t([r({json:{write:!0}})],p.prototype,"findBestSequence",void 0),t([r({json:{write:!0}})],p.prototype,"ignoreInvalidLocations",void 0),t([r({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],p.prototype,"impedanceAttribute",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"outputGeometryPrecision",void 0),t([me(Yt)],p.prototype,"outputGeometryPrecisionUnits",void 0),t([me(Xt)],p.prototype,"outputLines",void 0),t([r({type:te,json:{write:!0}})],p.prototype,"outSpatialReference",void 0),t([r({json:{write:!0}})],p.prototype,"pointBarriers",void 0),t([U("pointBarriers")],p.prototype,"writePointBarriers",null),t([r({json:{write:!0}})],p.prototype,"polygonBarriers",void 0),t([U("polygonBarriers")],p.prototype,"writePolygonBarrier",null),t([r({json:{write:!0}})],p.prototype,"polylineBarriers",void 0),t([U("polylineBarriers")],p.prototype,"writePolylineBarrier",null),t([r({json:{write:!0}})],p.prototype,"preserveFirstStop",void 0),t([r({json:{write:!0}})],p.prototype,"preserveLastStop",void 0),t([r({type:[String],json:{write:!0}})],p.prototype,"restrictionAttributes",void 0),t([me(Qt)],p.prototype,"restrictUTurns",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnDirections",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnPolygonBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnPolylineBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnRoutes",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnStops",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"returnZ",void 0),t([r({type:Date,json:{type:Number,write:!0}})],p.prototype,"startTime",void 0),t([c("startTime")],p.prototype,"readStartTime",null),t([U("startTime")],p.prototype,"writeStartTime",null),t([r({type:Boolean,json:{write:!0}})],p.prototype,"startTimeIsUTC",void 0),t([r({json:{write:!0}})],p.prototype,"stops",void 0),t([U("stops")],p.prototype,"writeStops",null),t([r({json:{write:!0}})],p.prototype,"timeWindowsAreUTC",void 0),t([r({type:lt,json:{write:!0}})],p.prototype,"travelMode",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),t([r({type:Boolean,json:{write:!0}})],p.prototype,"useTimeWindows",void 0),p=Ie=t([V("esri.rest.support.RouteParameters")],p);const et=p;var De;let l=De=class extends k{constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,i){return je(i.attributes.ArriveTime,i.attributes.ArriveTimeUTC)}readCumulativeCosts(e,i){return R(i.attributes,"Cumul_")}readDepartTimeOffset(e,i){return je(i.attributes.DepartTime,i.attributes.DepartTimeUTC)}readServiceCosts(e,i){return R(i.attributes,"Attr_")}writeServiceCosts(e,i){if(!S(e)){i.attributes||(i.attributes={});for(const s in e)i.attributes[`Attr_${s}`]=e[s]}}writeTimeWindowEnd(e,i){S(e)||(i.attributes||(i.attributes={}),i.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,i){S(e)||(i.attributes||(i.attributes={}),i.attributes.TimeWindowStart=e.getTime())}readViolations(e,i){return R(i.attributes,"Violation_")}readWait(e,i){return R(i.attributes,"Wait_")}static fromPortalJSON(e){var i,s,n,a,b,y,w,v,D,I;return new De({arriveCurbApproach:o(e.attributes.ArrivalCurbApproach)?C.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:o(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:o(e.attributes.CumulativeCosts)?JSON.parse(e.attributes.CumulativeCosts):null,cumulativeDistance:(i=e.attributes.CumulativeMeters)!=null?i:null,cumulativeDuration:(s=e.attributes.CumulativeMinutes)!=null?s:null,curbApproach:o(e.attributes.CurbApproach)?C.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:o(e.attributes.DepartureCurbApproach)?C.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:o(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:(n=e.attributes.DepartureUTCOffset)!=null?n:null,geometry:pe.fromJSON(e.geometry),lateDuration:(a=e.attributes.LateMinutes)!=null?a:null,locationType:o(e.attributes.LocationType)?he.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.__OBJECTID,popupTemplate:o(e.popupInfo)?J.fromJSON(e.popupInfo):null,routeName:e.attributes.RouteName,sequence:(b=e.attributes.Sequence)!=null?b:null,serviceCosts:o(e.attributes.ServiceCosts)?JSON.parse(e.attributes.ServiceCosts):null,serviceDistance:(y=e.attributes.ServiceMeters)!=null?y:null,serviceDuration:(w=e.attributes.ServiceMinutes)!=null?w:null,status:o(e.attributes.Status)?Q.fromJSON(e.attributes.Status):null,symbol:o(e.symbol)?ie(e.symbol):null,timeWindowEnd:o(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:(v=e.attributes.TimeWindowEndUTCOffset)!=null?v:null,timeWindowStart:o(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:(D=e.attributes.TimeWindowStartUTCOffset)!=null?D:null,waitDuration:(I=e.attributes.WaitMinutes)!=null?I:null})}clone(){return new De(fe({arriveCurbApproach:this.arriveCurbApproach,arriveTime:this.arriveTime,arriveTimeOffset:this.arriveTimeOffset,bearing:this.bearing,bearingTol:this.bearingTol,cumulativeCosts:this.cumulativeCosts,cumulativeDistance:this.cumulativeDistance,cumulativeTime:this.cumulativeDuration,curbApproach:this.curbApproach,departCurbApproach:this.departCurbApproach,departTime:this.departTime,departTimeOffset:this.departTimeOffset,distanceToNetworkInMeters:this.distanceToNetworkInMeters,geometry:this.geometry,lateDuration:this.lateDuration,locationType:this.locationType,name:this.name,navLatency:this.navLatency,objectId:this.objectId,popupTemplate:this.popupTemplate,posAlong:this.posAlong,routeName:this.routeName,serviceCosts:this.serviceCosts,serviceDistance:this.serviceDistance,serviceDuration:this.serviceDuration,sequence:this.sequence,sideOfEdge:this.sideOfEdge,snapX:this.snapX,snapY:this.snapY,snapZ:this.snapZ,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol,timeWindowEnd:this.timeWindowEnd,timeWindowEndOffset:this.timeWindowEndOffset,timeWindowStart:this.timeWindowStart,timeWindowStartOffset:this.timeWindowStartOffset,waitDuration:this.waitDuration}))}toPortalJSON(){var e,i;return{geometry:o(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:x(this.objectId),ArrivalCurbApproach:o(this.arriveCurbApproach)?C.toJSON(this.arriveCurbApproach):null,ArrivalTime:o(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:o(this.cumulativeCosts)?JSON.stringify(this.cumulativeCosts):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:o(this.curbApproach)?C.toJSON(this.curbApproach):null,DepartureCurbApproach:o(this.departCurbApproach)?C.toJSON(this.departCurbApproach):null,DepartureTime:o(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:o(this.locationType)?he.toJSON(this.locationType):null,Name:x(this.name),RouteName:x(this.routeName),Sequence:this.sequence,ServiceCosts:o(this.serviceCosts)?JSON.stringify(this.serviceCosts):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:o(this.status)?Q.toJSON(this.status):null,TimeWindowEnd:o(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:(e=this.timeWindowEndOffset)!=null?e:this.arriveTimeOffset,TimeWindowStart:o(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:(i=this.timeWindowEndOffset)!=null?i:this.arriveTimeOffset,WaitMinutes:this.waitDuration},symbol:o(this.symbol)?this.symbol.toJSON():null,popupInfo:o(this.popupTemplate)?this.popupTemplate.toJSON():null}}};l.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],l.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:C.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:C.read}}})],l.prototype,"arriveCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],l.prototype,"arriveTime",void 0),t([r()],l.prototype,"arriveTimeOffset",void 0),t([c("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],l.prototype,"readArriveTimeOffset",null),t([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],l.prototype,"bearing",void 0),t([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],l.prototype,"bearingTol",void 0),t([r()],l.prototype,"cumulativeCosts",void 0),t([c("cumulativeCosts",["attributes"])],l.prototype,"readCumulativeCosts",null),t([r({json:{read:!1}})],l.prototype,"cumulativeDistance",void 0),t([r({json:{read:!1}})],l.prototype,"cumulativeDuration",void 0),t([r({type:C.apiValues,json:{name:"attributes.CurbApproach",read:{reader:C.read},write:{writer:C.write}}})],l.prototype,"curbApproach",void 0),t([r({type:C.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:C.read}}})],l.prototype,"departCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],l.prototype,"departTime",void 0),t([r()],l.prototype,"departTimeOffset",void 0),t([c("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],l.prototype,"readDepartTimeOffset",null),t([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],l.prototype,"distanceToNetworkInMeters",void 0),t([r({type:pe,json:{write:!0}})],l.prototype,"geometry",void 0),t([r({json:{name:"attributes.LateMinutes",read:!1}})],l.prototype,"lateDuration",void 0),t([r({type:he.apiValues,json:{name:"attributes.LocationType",read:{reader:he.read},write:{writer:he.write}}})],l.prototype,"locationType",void 0),t([r({json:{name:"attributes.Name",write:!0}})],l.prototype,"name",void 0),t([r({json:{read:{source:"attributes.NavLatency"}}})],l.prototype,"navLatency",void 0),t([r({json:{name:"attributes.ObjectID",write:!0}})],l.prototype,"objectId",void 0),t([r({type:J,json:{read:!1}})],l.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.PosAlong"}}})],l.prototype,"posAlong",void 0),t([r({json:{name:"attributes.RouteName",write:!0}})],l.prototype,"routeName",void 0),t([r()],l.prototype,"serviceCosts",void 0),t([c("serviceCosts",["attributes"])],l.prototype,"readServiceCosts",null),t([U("serviceCosts")],l.prototype,"writeServiceCosts",null),t([r({json:{read:!1}})],l.prototype,"serviceDistance",void 0),t([r({json:{read:!1}})],l.prototype,"serviceDuration",void 0),t([r({json:{name:"attributes.Sequence",write:!0}})],l.prototype,"sequence",void 0),t([r({type:Be.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Be.read}}})],l.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SnapX"}}})],l.prototype,"snapX",void 0),t([r({json:{read:{source:"attributes.SnapY"}}})],l.prototype,"snapY",void 0),t([r({json:{read:{source:"attributes.SnapZ"}}})],l.prototype,"snapZ",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],l.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],l.prototype,"sourceOid",void 0),t([r({type:Q.apiValues,json:{read:{source:"attributes.Status",reader:Q.read}}})],l.prototype,"status",void 0),t([r({types:N,json:{read:!1}})],l.prototype,"symbol",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],l.prototype,"timeWindowEnd",void 0),t([U("timeWindowEnd")],l.prototype,"writeTimeWindowEnd",null),t([r({json:{read:!1}})],l.prototype,"timeWindowEndOffset",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],l.prototype,"timeWindowStart",void 0),t([U("timeWindowStart")],l.prototype,"writeTimeWindowStart",null),t([r({json:{read:!1}})],l.prototype,"timeWindowStartOffset",void 0),t([r()],l.prototype,"violations",void 0),t([c("violations",["attributes"])],l.prototype,"readViolations",null),t([r({json:{read:!1}})],l.prototype,"waitDuration",void 0),t([r()],l.prototype,"wait",void 0),t([c("wait",["attributes"])],l.prototype,"readWait",null),l=De=t([V("esri.rest.support.Stop")],l);const ne=l;function Je(e){return e.length?e:null}function we(e){return"layers"in e}function oi(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function si(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function ai(e,i,s){var n,a,b,y,w,v,D,I,F,O,T;const{impedance:f,networkDataset:de,supportedTravelModes:re,defaultTravelMode:ve}=i,oe=de.networkAttributes.filter(u=>u.usageType==="esriNAUTCost"),Ee=re.find(u=>u.id===ve),q=(n=s.travelMode)!=null?n:Ee;if(S(q))return void dt.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:_,distanceAttributeName:G}=q,K=oe.find(u=>u.name===_),We=oe.find(u=>u.name===G),Te=(a=(b=(y=s.travelMode)==null?void 0:y.impedanceAttributeName)!=null?b:s.impedanceAttribute)!=null?a:f,Z=ti.fromJSON(K==null?void 0:K.units),Se=nt.fromJSON(We==null?void 0:We.units);if(!Z||!Se)throw new z("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const mt=(w=s.directionsLanguage)!=null?w:i.directionsLanguage,Ue=(v=(D=s.accumulateAttributes)!=null?D:i.accumulateAttributeNames)!=null?v:[],bt=new Set(oe.filter(({name:u})=>u===_||u===G||u===Te||Ue.includes(u)).map(({name:u})=>u)),$=u=>{for(const He in u)bt.has(He)||delete u[He]};for(const u of e.pointBarriers){var Ve;o(u.costs)&&(u.addedCost=(Ve=u.costs[Te])!=null?Ve:0,$(u.costs))}for(const u of e.polygonBarriers){var $e;o(u.costs)&&(u.scaleFactor=($e=u.costs[Te])!=null?$e:1,$(u.costs))}for(const u of e.polylineBarriers){var Re;o(u.costs)&&(u.scaleFactor=(Re=u.costs[Te])!=null?Re:1,$(u.costs))}const{routeInfo:A}=e,{findBestSequence:yt,preserveFirstStop:ct,preserveLastStop:ht,startTimeIsUTC:ft,timeWindowsAreUTC:vt}=s;A.analysisSettings=new pt({accumulateAttributes:Ue,directionsLanguage:mt,findBestSequence:yt,preserveFirstStop:ct,preserveLastStop:ht,startTimeIsUTC:ft,timeWindowsAreUTC:vt,travelMode:q}),A.totalDuration=ee((I=A.totalCosts[_])!=null?I:0,Z),A.totalDistance=Le((F=A.totalCosts[G])!=null?F:0,Se),A.totalLateDuration=ee((O=A.totalViolations[_])!=null?O:0,Z),A.totalWaitDuration=ee((T=A.totalWait[_])!=null?T:0,Z),o(A.totalCosts)&&$(A.totalCosts),o(A.totalViolations)&&$(A.totalViolations),o(A.totalWait)&&$(A.totalWait);for(const u of e.stops){var ke,qe,Ge,ze,Ke,Ze;o(u.serviceCosts)&&(u.serviceDuration=ee((ke=u.serviceCosts[_])!=null?ke:0,Z),u.serviceDistance=Le((qe=u.serviceCosts[G])!=null?qe:0,Se),$(u.serviceCosts)),o(u.cumulativeCosts)&&(u.cumulativeDuration=ee((Ge=u.cumulativeCosts[_])!=null?Ge:0,Z),u.cumulativeDistance=Le((ze=u.cumulativeCosts[G])!=null?ze:0,Se),$(u.cumulativeCosts)),o(u.violations)&&(u.lateDuration=ee((Ke=u.violations[_])!=null?Ke:0,Z),$(u.violations)),o(u.wait)&&(u.waitDuration=ee((Ze=u.wait[_])!=null?Ze:0,Z),$(u.wait))}}async function tt(e){const i=te.WGS84;return await Kt(e.spatialReference,i),Zt(e,i)}function ee(e,i){switch(i){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Le(e,i){return i==="decimal-degrees"||i==="points"||i==="unknown"?e:zt(e,i,"meters")}const li=P.ofType(be),ni=P.ofType(ye),it=P.ofType(se),rt=P.ofType(ae),ot=P.ofType(le),st=P.ofType(ne),dt=It.getLogger("esri.layers.RouteLayer");let d=class extends Dt(Ft(At(Bt(jt(Et(xt)))))){constructor(...e){super(...e),this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new ut,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new it,this.polygonBarriers=new rt,this.polylineBarriers=new ot,this.routeInfo=null,this.spatialReference=te.WGS84,this.stops=new st,this.type="route",this.handles.add(Jt(()=>this.stops.toArray(),()=>{S(this.routeInfo)&&this._setStopSymbol(this.stops)},{sync:!0}))}writeFeatureCollectionWebmap(e,i,s,n){const a=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(w=>!!w),b=a.map((w,v)=>v),y=n.origin==="web-map"?"featureCollection.layers":"layers";Lt(y,a,i),i.opacity=this.opacity,i.visibility=this.visible,i.visibleLayers=b}readDirectionLines(e,i){return this._getNetworkFeatures(i,"DirectionLines",s=>be.fromPortalJSON(s))}readDirectionPoints(e,i){return this._getNetworkFeatures(i,"DirectionPoints",s=>ye.fromPortalJSON(s))}get fullExtent(){if(o(this.routeInfo)&&o(this.routeInfo.geometry))return this.routeInfo.geometry.extent;if(this.stops.length>1){const{spatialReference:e}=this.stops[0],i=new Pt({spatialReference:e}),s=this.stops.toArray().map(n=>n.geometry);for(const n of s)o(n)&&i.addPoint(n);return i.extent}return new Mt({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:te.WGS84})}readMaxScale(e,i){var s;const n=(we(i)?i.layers:i.featureCollection.layers).find(a=>o(a.layerDefinition.maxScale));return(s=n==null?void 0:n.layerDefinition.maxScale)!=null?s:0}readMinScale(e,i){var s;const n=(we(i)?i.layers:i.featureCollection.layers).find(a=>o(a.layerDefinition.minScale));return(s=n==null?void 0:n.layerDefinition.minScale)!=null?s:0}readPointBarriers(e,i){return this._getNetworkFeatures(i,"Barriers",s=>se.fromPortalJSON(s))}readPolygonBarriers(e,i){return this._getNetworkFeatures(i,"PolygonBarriers",s=>ae.fromPortalJSON(s))}readPolylineBarriers(e,i){return this._getNetworkFeatures(i,"PolylineBarriers",s=>le.fromPortalJSON(s))}readRouteInfo(e,i){const s=this._getNetworkFeatures(i,"RouteInfo",n=>ge.fromPortalJSON(n));return s.length>0?s.getItemAt(0):null}readSpatialReference(e,i){var s,n;const a=we(i)?i.layers:i.featureCollection.layers;if(!a.length)return te.WGS84;const{layerDefinition:b}=a[0],y=(s=(n=b.spatialReference)!=null?n:b.extent.spatialReference)!=null?s:_t;return te.fromJSON(y)}readStops(e,i){return this._getNetworkFeatures(i,"Stops",s=>ne.fromPortalJSON(s),s=>this._setStopSymbol(s))}get title(){return o(this.routeInfo)&&o(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){e?this._override("title",e):this._clearOverride("title")}get url(){return Qe.routeServiceUrl}set url(e){e!=null?this._set("url",Wt(e,dt)):this._set("url",Qe.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){o(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),o(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),o(this.routeInfo)&&this._set("routeInfo",null),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}async save(){await this.load();const{fullExtent:e,portalItem:i}=this;if(!i)throw new z("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!i.id)throw new z("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(i.type!=="Feature Collection")throw new z("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(S(this.routeInfo))throw new z("routelayer:route-unsolved","save() requires a solved route");const{portal:s}=i;if(await s._signIn(),s.user||await i.reload(),s.user.username!==i.owner)throw new z("routelayer:not-portal-item-owner","You can only overwrite your portal items");const{itemUrl:n}=i,a={messages:[],origin:"portal-item",portal:s,url:n&&Ut(n),writtenProperties:[]},b=this.write(null,a);return i.extent=await tt(e),i.title=this.title,await i.update({data:b}),i}async saveAs(e,i={}){if(await this.load(),S(this.routeInfo))throw new z("routelayer:route-unsolved","saveAs() requires a solved route");const s=Vt.from(e).clone();s.extent!=null||(s.extent=await tt(this.fullExtent)),s.id=null,s.portal!=null||(s.portal=$t.getDefault()),s.title!=null||(s.title=this.title),s.type="Feature Collection",s.typeKeywords=["Data","Feature Collection","Multilayer","Route Layer"];const{portal:n}=s,a={messages:[],origin:"portal-item",portal:n,url:null,writtenProperties:[]};await n._signIn();const b=i==null?void 0:i.folder,y=this.write(null,a);return await n.user.addItem({item:s,folder:b,data:y}),this.portalItem=s,Rt(a),a.portalItem=s,s}async solve(e,i){var s,n,a,b,y,w;const v=(s=e==null?void 0:e.stops)!=null?s:this.stops,D=(n=e==null?void 0:e.pointBarriers)!=null?n:Je(this.pointBarriers),I=(a=e==null?void 0:e.polylineBarriers)!=null?a:Je(this.polylineBarriers),F=(b=e==null?void 0:e.polygonBarriers)!=null?b:Je(this.polygonBarriers);if(S(v))throw new z("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((oi(v)||si(v))&&v.features.length<2||P.isCollection(v)&&v.length<2)throw new z("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");const O=await ei(this.url,e==null?void 0:e.apiKey,i),{defaultTravelMode:T,supportedTravelModes:f}=O,de=f.find(K=>K.id===T),re=(y=e==null?void 0:e.travelMode)!=null?y:de,ve=(w=e==null?void 0:e.accumulateAttributes)!=null?w:[];o(re)&&ve.push(re.distanceAttributeName);const oe={startTime:new Date},Ee={accumulateAttributes:ve,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:D,polylineBarriers:I,polygonBarriers:F,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!D,returnDirections:!0,returnPolygonBarriers:!!F,returnPolylineBarriers:!!I,returnRoutes:!0,returnStops:!0,stops:v},q=e?et.from(e):new et;for(const K in oe)q[K]==null&&(q[K]=oe[K]);q.set(Ee);const _=await ii(this.url,q,i),G=this._toRouteLayerSolution(_);return this._isOverridden("title")||(this.title=kt(G.routeInfo.name,"Route")),ai(G,O,q),G}update(e){const{stops:i,directionLines:s,directionPoints:n,pointBarriers:a,polylineBarriers:b,polygonBarriers:y,routeInfo:w}=e;this.set({stops:i,pointBarriers:a,polylineBarriers:b,polygonBarriers:y}),this._set("directionLines",s),this._set("directionPoints",n),this._set("routeInfo",w)}_getLayerDefinition(){return{capabilities:"Query,Update,Editing",extent:this.fullExtent.toJSON(),hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),type:"Feature Layer",typeIdField:""}}_getNetworkFeatures(e,i,s,n){const a=(we(e)?e.layers:e.featureCollection.layers).find(O=>O.layerDefinition.name===i);if(S(a))return new P;const{layerDefinition:b,popupInfo:y,featureSet:w}=a,v=b.drawingInfo.renderer,{features:D}=w,I=v&&qt(v),F=D.map(O=>{var T;const f=s(O),{attributes:de}=O,re=new Gt({attributes:de});return f.symbol!=null||(f.symbol=(T=I==null?void 0:I.getSymbol(re))!=null?T:this._getNetworkSymbol(i)),f.popupTemplate!=null||(f.popupTemplate=y&&J.fromJSON(y)),f});return n&&F.some(O=>!O.symbol)&&n(F),new P(F)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}_setStopSymbol(e){if(!e||e.length===0)return;if(S(this.routeInfo)||e.length===1)return void e.forEach((a,b)=>{switch(b){case 0:a.symbol=this.defaultSymbols.firstStop;break;case e.length-1:a.symbol=this.defaultSymbols.lastStop;break;default:a.symbol=this.defaultSymbols.middleStop}});const i=e.map(a=>a.sequence).filter(a=>o(a)),s=Math.min(...i),n=Math.max(...i);for(const a of e)a.sequence!==s?a.sequence!==n?a.status==="ok"||a.status==="not-located-on-closest"?a.locationType!=="waypoint"?a.locationType!=="break"?a.symbol=this.defaultSymbols.middleStop:a.symbol=this.defaultSymbols.breakStop:a.symbol=this.defaultSymbols.waypointStop:a.symbol=this.defaultSymbols.invalidStop:a.symbol=this.defaultSymbols.lastStop:a.symbol=this.defaultSymbols.firstStop}_toRouteLayerSolution(e){var i,s,n,a,b;const y=e.routeResults[0].stops.map(T=>ne.fromJSON(T.toJSON()));this._setStopSymbol(y);const w=new st(y),v=new rt((i=e.polygonBarriers)==null?void 0:i.map(T=>{const f=ae.fromJSON(T.toJSON());return f.symbol=this.defaultSymbols.polygonBarriers,f})),D=new ot((s=e.polylineBarriers)==null?void 0:s.map(T=>{const f=le.fromJSON(T.toJSON());return f.symbol=this.defaultSymbols.polylineBarriers,f})),I=new it((n=e.pointBarriers)==null?void 0:n.map(T=>{const f=se.fromJSON(T.toJSON());return f.symbol=this.defaultSymbols.pointBarriers,f})),F=ge.fromJSON(e.routeResults[0].route.toJSON());F.symbol=this.defaultSymbols.routeInfo;const O=new ni((a=e.routeResults[0].directionPoints)==null?void 0:a.features.map(T=>{const f=ye.fromJSON(T.toJSON());return f.symbol=this.defaultSymbols.directionPoints,f}));return{directionLines:new li((b=e.routeResults[0].directionLines)==null?void 0:b.features.map(T=>{const f=be.fromJSON(T.toJSON());return f.symbol=this.defaultSymbols.directionLines,f})),directionPoints:O,pointBarriers:I,polygonBarriers:v,polylineBarriers:D,routeInfo:F,stops:w}}_writeDirectionLines(){return S(this.directionLines)||!this.directionLines.length?null:{featureSet:{features:this.directionLines.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPolyline"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionLines.toJSON()}},fields:be.fields,geometryType:"esriGeometryPolyline",name:"DirectionLines",title:"Direction Lines"}),popupInfo:be.popupInfo}}_writeDirectionPoints(){return S(this.directionPoints)||!this.directionPoints.length?null:{featureSet:{features:this.directionPoints.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionPoints.toJSON()}},fields:ye.fields,geometryType:"esriGeometryPoint",name:"DirectionPoints",title:"Direction Points"}),popupInfo:ye.popupInfo}}_writePointBarriers(){return S(this.pointBarriers)||!this.pointBarriers.length?null:{featureSet:{features:this.pointBarriers.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.pointBarriers.toJSON()}},fields:se.fields,geometryType:"esriGeometryPoint",name:"Barrier",title:"Point Barrier"}),popupInfo:se.popupInfo}}_writePolygonBarriers(){return S(this.polygonBarriers)||!this.polygonBarriers.length?null:{featureSet:{features:this.polygonBarriers.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPolygon"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polygonBarriers.toJSON()}},fields:ae.fields,geometryType:"esriGeometryPolygon",name:"PolygonBarriers",title:"Polygon Barriers"}),popupInfo:ae.popupInfo}}_writePolylineBarriers(){return S(this.polylineBarriers)||!this.polylineBarriers.length?null:{featureSet:{features:this.polylineBarriers.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPolyline"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polylineBarriers.toJSON()}},fields:le.fields,geometryType:"esriGeometryPolyline",name:"PolylineBarriers",title:"Line Barriers"}),popupInfo:le.popupInfo}}_writeRouteInfo(){return S(this.routeInfo)?null:{featureSet:{features:[this.routeInfo.toPortalJSON()],geometryType:"esriGeometryPolyline"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.routeInfo.toJSON()}},fields:ge.fields,geometryType:"esriGeometryPolyline",name:"RouteInfo",title:"Route Details"}),popupInfo:ge.popupInfo}}_writeStops(){return S(this.stops)||!this.stops.length?null:{featureSet:{features:this.stops.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:Y(H({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"uniqueValue",field1:"Sequence",defaultSymbol:this.defaultSymbols.middleStop.toJSON(),uniqueValueInfos:[{value:"1",symbol:this.defaultSymbols.firstStop.toJSON(),label:"First Stop"},{value:`${this.stops.length}`,symbol:this.defaultSymbols.lastStop.toJSON(),label:"Last Stop"}]}},fields:ne.fields,geometryType:"esriGeometryPoint",name:"Stops",title:"Stops"}),popupInfo:ne.popupInfo}}};t([r({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],d.prototype,"_featureCollection",void 0),t([U(["web-map","portal-item"],"_featureCollection")],d.prototype,"writeFeatureCollectionWebmap",null),t([r({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],d.prototype,"_type",void 0),t([r({nonNullable:!0,type:ut})],d.prototype,"defaultSymbols",void 0),t([r({readOnly:!0})],d.prototype,"directionLines",void 0),t([c(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],d.prototype,"readDirectionLines",null),t([r({readOnly:!0})],d.prototype,"directionPoints",void 0),t([c(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],d.prototype,"readDirectionPoints",null),t([r({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],d.prototype,"featureCollectionType",void 0),t([r({readOnly:!0})],d.prototype,"fullExtent",null),t([r({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],d.prototype,"legendEnabled",void 0),t([r({type:["show","hide"]})],d.prototype,"listMode",void 0),t([r({type:Number,nonNullable:!0,json:{write:!1}})],d.prototype,"maxScale",void 0),t([c(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],d.prototype,"readMaxScale",null),t([r({type:Number,nonNullable:!0,json:{write:!1}})],d.prototype,"minScale",void 0),t([c(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],d.prototype,"readMinScale",null),t([r({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],d.prototype,"operationalLayerType",void 0),t([r({nonNullable:!0,type:P.ofType(se)})],d.prototype,"pointBarriers",void 0),t([c(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],d.prototype,"readPointBarriers",null),t([r({nonNullable:!0,type:P.ofType(ae)})],d.prototype,"polygonBarriers",void 0),t([c(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],d.prototype,"readPolygonBarriers",null),t([r({nonNullable:!0,type:P.ofType(le)})],d.prototype,"polylineBarriers",void 0),t([c(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],d.prototype,"readPolylineBarriers",null),t([r({readOnly:!0})],d.prototype,"routeInfo",void 0),t([c(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],d.prototype,"readRouteInfo",null),t([r({type:te})],d.prototype,"spatialReference",void 0),t([c(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],d.prototype,"readSpatialReference",null),t([r({nonNullable:!0,type:P.ofType(ne)})],d.prototype,"stops",void 0),t([c(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],d.prototype,"readStops",null),t([r()],d.prototype,"title",null),t([r({readOnly:!0,json:{read:!1}})],d.prototype,"type",void 0),t([r()],d.prototype,"url",null),d=t([V("esri.layers.RouteLayer")],d);const ci=d;export{ci as default};
