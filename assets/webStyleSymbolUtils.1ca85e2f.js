import{ml as g,mm as w,mn as N,bt as b,mo as S,mp as P,L as j,bs as O,mq as c,mr as v,ms as x,mt as f,mu as q,mv as h,mw as d,mx as B}from"./vendor.f59113c8.js";function M(e,t,a,s){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?F(e,t,s):P(e,t,s).then(r=>E(r,e.name,t,a,s)):Promise.reject(new j("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function E(e,t,a,s,r){const u=e.data,y={portal:a&&a.portal||O.getDefault(),url:b(e.baseUrl),origin:"portal-item"},n=u.items.find(m=>m.name===t);if(!n){const m=`The symbol name '${t}' could not be found`;return Promise.reject(new j("symbolstyleutils:symbol-name-not-found",m,{symbolName:t}))}let o=c(v(n,s),y),i=n.thumbnail&&n.thumbnail.href;const p=n.thumbnail&&n.thumbnail.imageData;x()&&(o=f(o),i=f(i));const U={portal:a.portal,url:b(S(o)),origin:"portal-item"};return g(o,r).then(m=>{const $=s==="cimRef"?w(m.data):m.data,l=N($,U);if(l&&q(l)){if(i){const D=c(i,y);l.thumbnail=new h({url:D})}else p&&(l.thumbnail=new h({url:`data:image/png;base64,${p}`}));e.styleUrl?l.styleOrigin=new d({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(l.styleOrigin=new d({portal:a.portal,styleName:e.styleName,name:t}))}return l})}function F(e,t,a){const s=B.replace(/\{SymbolName\}/gi,e.name);return g(s,a).then(r=>{const u=w(r.data);return N(u,{portal:t.portal,url:b(S(s)),origin:"portal-item"})})}export{E as fetchSymbolFromStyle,M as resolveWebStyleSymbol};
