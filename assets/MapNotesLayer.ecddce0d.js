var z=Object.defineProperty;var M=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,W=Object.prototype.propertyIsEnumerable;var I=(e,t,r)=>t in e?z(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,E=(e,t)=>{for(var r in t||(t={}))A.call(t,r)&&I(e,r,t[r]);if(M)for(var r of M(t))W.call(t,r)&&I(e,r,t[r]);return e};import{oU as D,oV as P,C as _,q1 as j,a as o,d as l,dx as B,q2 as q,n as C,fS as F,S as Q,pe as U,pg as R,i as V,km as Y,kn as H,ko as K,d7 as v,G as N,dv as X,em as J,ao as L,g as Z,t as h,L as ee,r as x,oG as te,f7 as re,cW as G,dp as g,eW as oe,f0 as ie,a_ as ae,hF as le,ef as ne,bv as se}from"./vendor.f59113c8.js";import{n as ye}from"./objectIdUtils.924cdb7f.js";let m=class extends D(P(_)){constructor(e){super(e),this.elevationInfo=null,this.graphics=new j,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};o([l({type:B})],m.prototype,"elevationInfo",void 0),o([l(q(j,"graphics"))],m.prototype,"graphics",void 0),o([l({type:["show","hide"]})],m.prototype,"listMode",void 0),o([l()],m.prototype,"screenSizePerspectiveEnabled",void 0),o([l({readOnly:!0})],m.prototype,"type",void 0),o([l({constructOnly:!0})],m.prototype,"internal",void 0),m=o([C("esri.layers.GraphicsLayer")],m);const pe=m;function O(e){return e.layers.some(t=>t.layerDefinition.visibilityField!=null)}const $=new F({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ue=new F({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let b=class extends pe{constructor(){super(...arguments),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",e=>{e.item.sourceLayer=this.layer}),this.graphics.on("after-remove",e=>{e.item.sourceLayer=null})}get sublayers(){return this.graphics}};o([l({readOnly:!0})],b.prototype,"sublayers",null),o([l()],b.prototype,"layer",void 0),o([l({readOnly:!0})],b.prototype,"visibilityMode",void 0),b=o([C("esri.layers.MapNotesLayer.MapNotesSublayer")],b);const T=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",layerId:"polygonLayer",title:"Polygons",identifyingSymbol:new Q().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",layerId:"polylineLayer",title:"Polylines",identifyingSymbol:new U().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",layerId:"multipointLayer",title:"Multipoints",identifyingSymbol:new R().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"pointLayer",title:"Points",identifyingSymbol:new R().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"textLayer",title:"Text",identifyingSymbol:new V().toJSON()}];let i=class extends D(P(Y(H(K(_))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.spatialReference=v.WGS84,this.sublayers=new N(T.map(t=>new b({id:t.layerId,title:t.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!O(t)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(e,t,r){if(!O(t))return null;const a=t.layers.map(n=>{const s=new X;return s.read(n,r),s});return new N({items:a})}readLegacyfeatureCollectionJSON(e,t){return O(t)?J(t.featureCollection):null}readFullExtent(e,t){if(!t.layers.length||t.layers.every(a=>!a.layerDefinition.extent))return new L({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:v.WGS84});const r=v.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce((a,n)=>{const s=n.layerDefinition.extent;return s?L.fromJSON(s).union(a):a},new L({spatialReference:r}))}readMinScale(e,t){for(const r of t.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?v.fromJSON(t.layers[0].layerDefinition.spatialReference):v.WGS84}readSublayers(e,t,r){if(O(t))return null;const a=[];for(let s=0;s<t.layers.length;s++){var n;const{layerDefinition:y,featureSet:p}=t.layers[s],d=(n=y.geometryType)!=null?n:p.geometryType,f=T.find(u=>{var c,S,w;return d===u.geometryTypeJSON&&((c=y.drawingInfo)==null||(S=c.renderer)==null||(w=S.symbol)==null?void 0:w.type)===u.identifyingSymbol.type});if(f){const u=new b({id:f.layerId,title:y.name,layer:this,graphics:p.features.map(({geometry:c,symbol:S,attributes:w,popupInfo:k})=>Z.fromJSON({attributes:w,geometry:c,symbol:S,popupTemplate:k}))});a.push(u)}}return new N(a)}writeSublayers(e,t,r,a){const{minScale:n,maxScale:s}=this;if(h(e))return;const y=e.some(u=>u.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing){var p;y&&(a==null||(p=a.messages)==null||p.push(new ee("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));return}const d=[];let f=this.spatialReference.toJSON();e:for(const u of e)for(const c of u.graphics)if(x(c.geometry)){f=c.geometry.spatialReference.toJSON();break e}for(const u of T){const c=e.find(S=>u.layerId===S.id);this._writeMapNoteSublayer(d,c,u,n,s,f,a)}te("featureCollection.layers",d,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=J(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(h(this.sublayers))return;let e=null;const t=[];for(const a of this.sublayers)for(const n of a.graphics)if(x(n.geometry)){const s=n.geometry;e?ie(s.spatialReference,e)||(ae(s.spatialReference,e)||le()||await ne(),n.geometry=se(s,e)):e=s.spatialReference,t.push(n)}const r=await re(t.map(a=>a.geometry));t.forEach((a,n)=>a.geometry=r[n])}_findSublayer(e){var t,r;return h(this.sublayers)?null:(t=(r=this.sublayers)==null?void 0:r.find(a=>a.id===e))!=null?t:null}_writeMapNoteSublayer(e,t,r,a,n,s,y){const p=[];if(!h(t)){for(const d of t.graphics)this._writeMapNote(p,d,r.geometryType,y);this._normalizeObjectIds(p,$),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:J(r.identifyingSymbol)}},geometryType:r.geometryTypeJSON,minScale:a,maxScale:n,objectIdField:"OBJECTID",fields:[$.toJSON(),ue.toJSON()],spatialReference:s},featureSet:{features:p,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,a){if(h(t))return;const{geometry:n,symbol:s,popupTemplate:y}=t;if(h(n))return;var p,d;if(n.type!==r)return void(a==null||(p=a.messages)==null||p.push(new G("map-notes-layer:invalid-geometry-type",`Geometry "${n.type}" cannot be saved in "${r}" layer`,{graphic:t})));if(h(s))return void(a==null||(d=a.messages)==null||d.push(new G("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const f={attributes:E({},t.attributes),geometry:n.toJSON(),symbol:s.toJSON()};x(y)&&(f.popupInfo=y.toJSON()),e.push(f)}_normalizeObjectIds(e,t){const r=t.name;let a=ye(r,e)+1;const n=new Set;for(const s of e){s.attributes||(s.attributes={});const{attributes:y}=s;(y[r]==null||n.has(y[r]))&&(y[r]=a++),n.add(y[r])}}};o([l({readOnly:!0})],i.prototype,"capabilities",void 0),o([g(["portal-item","web-map"],"capabilities",["layers"])],i.prototype,"readCapabilities",null),o([l({readOnly:!0})],i.prototype,"featureCollections",void 0),o([g(["web-map","portal-item"],"featureCollections",["layers"])],i.prototype,"readFeatureCollections",null),o([l({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],i.prototype,"featureCollectionJSON",void 0),o([g(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],i.prototype,"readLegacyfeatureCollectionJSON",null),o([l({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],i.prototype,"featureCollectionType",void 0),o([l({json:{write:!1}})],i.prototype,"fullExtent",void 0),o([g(["web-map","portal-item"],"fullExtent",["layers"])],i.prototype,"readFullExtent",null),o([l({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],i.prototype,"legendEnabled",void 0),o([l({type:["show","hide"]})],i.prototype,"listMode",void 0),o([l({type:Number,nonNullable:!0,json:{write:!1}})],i.prototype,"minScale",void 0),o([g(["web-map","portal-item"],"minScale",["layers"])],i.prototype,"readMinScale",null),o([l({type:Number,nonNullable:!0,json:{write:!1}})],i.prototype,"maxScale",void 0),o([g(["web-map","portal-item"],"maxScale",["layers"])],i.prototype,"readMaxScale",null),o([l({readOnly:!0})],i.prototype,"multipointLayer",null),o([l({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],i.prototype,"operationalLayerType",void 0),o([l({readOnly:!0})],i.prototype,"pointLayer",null),o([l({readOnly:!0})],i.prototype,"polygonLayer",null),o([l({readOnly:!0})],i.prototype,"polylineLayer",null),o([l({type:v})],i.prototype,"spatialReference",void 0),o([g(["web-map","portal-item"],"spatialReference",["layers"])],i.prototype,"readSpatialReference",null),o([l({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],i.prototype,"sublayers",void 0),o([g("web-map","sublayers",["layers"])],i.prototype,"readSublayers",null),o([oe("web-map","sublayers")],i.prototype,"writeSublayers",null),o([l({readOnly:!0})],i.prototype,"textLayer",null),o([l()],i.prototype,"title",void 0),o([l({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),i=o([C("esri.layers.MapNotesLayer")],i);const fe=i;export{fe as default};
