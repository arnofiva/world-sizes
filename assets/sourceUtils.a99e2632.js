import{gz as m,nI as g,nJ as p,nK as y,nL as w,fo as f}from"./vendor.d1b93dad.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(n){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=n}}function d(e){return new b(e)}class q{constructor(n){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=n}}function F(e){return new q(e)}const a=new Set;function G(e,n,i,h=!1,u){a.clear();for(const r in i){const t=e.get(r);if(!t)continue;const l=i[r],s=v(t,l);if(s!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:t,originalValue:l,sanitizedValue:s}}),a.add(t.name),t&&(h||t.editable)){const c=y(t,s);if(c)return d(w(c,t,s));n[t.name]=s}}for(const r of e.requiredFields)if(!a.has(r.name))return d(`missing required field "${r.name}"`);return null}function v(e,n){let i=n;return typeof n=="string"&&m(e)?i=parseFloat(n):n!=null&&g(e)&&typeof n!="string"&&(i=String(n)),p(i)}let o;function P(e,n){if(!e||!f(n))return e;if("rings"in e||"paths"in e){if(!o)throw new TypeError("geometry engine not loaded");return o.simplify(n,e)}return e}async function j(){return o||(o=await import("./geometryEngineJSON.75aa89d4.js"),o)}async function S(e,n){!f(e)||n!=="esriGeometryPolygon"&&n!=="esriGeometryPolyline"||await j()}export{F as c,G as d,P as h,d as u,S as y};
