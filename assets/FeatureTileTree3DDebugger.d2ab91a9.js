var p=Object.defineProperty,g=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var o=(e,t,i)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,d=(e,t)=>{for(var i in t||(t={}))y.call(t,i)&&o(e,i,t[i]);if(n)for(var i of n(t))T.call(t,i)&&o(e,i,t[i]);return e},l=(e,t)=>g(e,u(t));import{c as w,u as v,P as m,v as f,a as r,d as s,n as k}from"./vendor.f59113c8.js";import{b as U}from"./TileTreeDebugger.36b27d21.js";let a=class extends U{constructor(e){super(e),this.watchUpdatingTracking=new w,this.handles=new v}initialize(){const{featureTiles:e}=this.view;this.handles.add(e.addClient()),this.watchUpdatingTracking.addOnCollectionChange(()=>e==null?void 0:e.tiles,()=>this.update(),m)}destroy(){this.handles&&(this.handles.destroy(),this.handles=null),this.watchUpdatingTracking.destroy()}getTiles(){const e=t=>{const[i,h,c]=t.lij;return f.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(i,h,c))};return this.view.featureTiles.tiles.toArray().sort((t,i)=>t.loadPriority-i.loadPriority).map(t=>l(d({},t),{geometry:e(t)}))}};r([s({readOnly:!0})],a.prototype,"watchUpdatingTracking",void 0),r([s({readOnly:!0,aliasOf:"watchUpdatingTracking.updating"})],a.prototype,"updating",void 0),r([s()],a.prototype,"view",void 0),a=r([k("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],a);const b=a;export{a as FeatureTileTree3DDebugger,b as default};
