import{I as m,d as h,g1 as z,u as L,bk as v,aa as I,J as O,g as P,bY as j,bZ as N,b_ as G,hJ as V,L as E,hK as A,hL as k,hz as D}from"./vendor.d1b93dad.js";import{k as F,B as J}from"./rasterProjectionHelper.76bb7bbf.js";import{d as M}from"./popupUtils.797f3b75.js";import{i as W}from"./RefreshableLayerView.887b0383.js";import{a as $}from"./drapedUtils.7cbe7d8e.js";const C=a=>{let r=class extends a{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return F(v(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(e){return!!this.projectFullExtent(e)}projectFullExtent(e){const i=v(this.layer.fullExtent),t=F(i,e,!1);return J(i,e,t)}async fetchPopupFeatures(e,i){const{layer:t}=this;if(!e)return Promise.reject(new I("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:n}=t,s=M(t,i);if(!n||!O(s))throw new I("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:n,popupTemplate:s});const l=[],{value:o,magdirValue:u}=await t.identify(e,{timeExtent:this.timeExtent});let b="";if(o&&o.length){var x,T;b=t.type==="imagery-tile"&&t.hasStandardTime()&&o[0]!=null?o.map(g=>t.getStandardTimeValue(g)).join(", "):o.join(", ");const f={ObjectId:0},_="Raster.ServicePixelValue";f[_]=this._formatAttributeValue(b,_);const w=(x=t.rasterInfo)==null||(T=x.attributeTable)==null?void 0:T.features;if(w&&w.length>0){const g=w.filter(p=>{const c=p.attributes.value||p.attributes.Value||p.attributes.VALUE;return String(c)===b});if(g.length>0){const p=g[0];if(p){for(const c in p.attributes)if(p.attributes.hasOwnProperty(c)){const S=this._rasterFieldPrefix+c;f[S]=this._formatAttributeValue(p.attributes[c],S)}}}}const R=t.rasterInfo.dataType;R!=="vector-magdir"&&R!=="vector-uv"||(f["Raster.Magnitude"]=u==null?void 0:u[0],f["Raster.Direction"]=u==null?void 0:u[1]);const y=new P(this.fullExtent.clone(),null,f);y.layer=t,y.sourceLayer=y.layer,l.push(y)}return l}_formatAttributeValue(e,i){if(typeof e=="string"){const t=this.layer.popupTemplate&&this.layer.popupTemplate.fieldInfos,n=this._getFieldInfo(t,i),s=n&&n.format;if(s){let l,o;return e.trim().indexOf(",")>-1?(l=",",o=l+" ",this._formatDelimitedString(e,l,o,s)):e.trim().indexOf(" ")>-1?(l=o=" ",this._formatDelimitedString(e,l,o,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,i){if(!e||!e.length||!i)return;const t=i.toLowerCase();let n;return e.some(s=>!(!s.fieldName||s.fieldName.toLowerCase()!==t&&s.fieldName.toLowerCase()!==t.replace(/ /g,"_"))&&(n=s,!0)),n}_formatDelimitedString(e,i,t,n){return e&&i&&t&&n?e.trim().split(i).map(s=>this._formatNumberFromString(s,n)).join(t):e}_formatNumberFromString(e,i){if(!e||!i)return e;const t=Number(e);return isNaN(t)?e:i.format(t)}};return m([h()],r.prototype,"layer",void 0),m([h(z)],r.prototype,"timeExtent",void 0),m([h()],r.prototype,"view",void 0),m([h()],r.prototype,"fullExtent",null),m([h()],r.prototype,"tileInfo",void 0),m([h({readOnly:!0})],r.prototype,"hasTilingEffects",null),r=m([L("esri.views.layers.ImageryTileLayerView")],r),r};let d=class extends C(W(j(N(G)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new I("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const a=V(this.view,"basemapTerrain.tilingSchemeLocked").then(()=>{const r=this.view.basemapTerrain.tilingScheme,{tileInfo:e}=this.layer,i=["png","png24","png32","jpg","mixed"].indexOf(e.format)>-1&&r.compatibleWith(e);this.isAlignedMapTile=i;const t=i?e:r.toTileInfo();this.tileInfo=t,this.updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition],()=>this.refresh())});this.addResolvingPromise(a)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const a=document.createElement("canvas"),r=a.getContext("2d"),[e,i]=this.tileInfo.size;return a.width=e,a.height=i,r.clearRect(0,0,e,i),r.getImageData(0,0,e,i)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const a=this.tileInfo.lods,r=this.layer.tileInfo.lods,e=a[0].scale,i=r[r.length-1].scale;return this.levelRangeFromScaleRange(e,i)}_getfullExtent(){return this.projectFullExtent(this.view.basemapTerrain?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(a,r,e,i){const t=this.tileInfo,n=this._canSymbolizeInWebGL(),s={tileInfo:t,requestRawData:n,signal:v(i.signal),requestAsImageElement:this.isAlignedMapTile},l=await this.layer.fetchTile(a,r,e,s);if(l instanceof HTMLImageElement)return l;let o=l&&l.pixelBlock;if(E(o))return this._blankTile;if(!n&&(o=await this.layer.applyRenderer(l),E(o)))return this._blankTile;const u=new A([a,r,e],o,t.size[0],t.size[1]);return n?(u.symbolizerRenderer=this.layer.symbolizer.rendererJSON,u.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(a)),u.transformGrid=l.transformGrid):u.isRendereredSource=!0,u.interpolation=this.layer.interpolation,u.bandIds=this.layer.bandIds,u}_getSymbolizerOptions(a){const r=this.tileInfo.lodAt(a).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(a){this._canSymbolizeInWebGL()&&JSON.stringify(a.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(a.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(a.lij[0])))}createFetchPopupFeaturesQueryGeometry(a,r){return $(a,r,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){const a=k(this.view._stage.renderView.renderingContext.type);return(a.type===D.WEBGL2||a.supportsTextureFloat)&&this.layer.symbolizer.canRenderInWebGL}};m([h({readOnly:!0})],d.prototype,"_blankTile",null),m([h({readOnly:!0})],d.prototype,"imageFormatIsOpaque",null),m([h({readOnly:!0})],d.prototype,"hasMixedImageFormats",null),m([h({readOnly:!0})],d.prototype,"dataLevelRange",null),d=m([L("esri.views.3d.layers.ImageryTileLayerView3D")],d);const Q=d;export{Q as default};
