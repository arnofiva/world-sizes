import{I as r,d as o,u as l,d3 as S,d2 as b,h as O,gH as $,J as p,g as x,dc as E,bZ as R,b_ as G,W as M,aa as T,a4 as U}from"./vendor.d1b93dad.js";import{t as V,h as L}from"./createConnection.fdde447d.js";import{r as j}from"./EventedSet.d233fc70.js";import{E as k}from"./FeatureLikeLayerView3D.59333a05.js";import"./Graphics3DFeatureProcessor.3f5e3f8b.js";import"./Graphics3DScaleVisibility.a06906ae.js";import"./optimizedFeatureQueryEngineAdapter.264950bf.js";import"./PooledRBush.74db5953.js";import"./quickselect.02d2bace.js";import"./Graphics3DObjectStates.c79f2989.js";import"./QueryEngine.b25a2b06.js";import"./QueryEngineCapabilities.650d7541.js";import"./attributeUtils.987422a2.js";import"./FeatureStore.6d3fd27f.js";import"./projectExtentUtils.834f9a01.js";const F=2500;let c=class extends x{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],c.prototype,"objectId",void 0),c=r([l("esri.layers.graphics.controllers.StreamGraphic")],c);class N{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const i=this._idToGraphic.get(t);return i?(i.sourceLayer=i.layer=null,this._idToGraphic.delete(t),i):null}update(t,i){this.onUpdate(t,i)}get size(){return this._idToGraphic.size}}let a=class extends S(b(O)){constructor(){super(...arguments),this._updateInfo={websocket:0,client:0},this.graphics=new j}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=0)}clear(){this._clearInterval(),this.connection&&(this.connection.destroy(),this.connection=null),this.store&&(this.store.destroy(),this.store=null),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{parsedUrl:e,spatialReference:t,definitionExpression:i,geometryDefinition:n,objectIdField:h,timeInfo:d,purgeOptions:y,maxReconnectionAttempts:m,maxReconnectionInterval:f,customParameters:_}=this.layer,g=$.toJSON(this.layer.geometryType),v=t,u=this.layerView.view.spatialReference,I={geometry:n,where:i};this.clear(),this._set("connection",V(e,v,u,g,I,m,f,_)),this._outSpatialReference=u.toJSON(),this.store=new N(this._onUpdate.bind(this)),this.featuresManager=new L(this.store,h,d.toJSON(),y),this.handles.add([this.connection.on("feature",w=>this._onFeature(w)),this.layer.watch("definitionExpression",()=>this._startup()),this.layer.watch("geometryDefinition",()=>this._startup()),this.layer.watch("purgeOptions",()=>this._startup())]),this._initUpdateInterval()}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{p(e.geometry)&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._outSpatialReference);const t=c.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){p(t)&&this.graphics.removeMany(t),p(e)&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const i=performance.now(),n=i-t;if(n>F){t=i;const h=Math.round(this._updateInfo.client/(n/1e3)),d=Math.round(this._updateInfo.websocket/(n/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:h,websocket:d})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this._clearInterval()}resumeStream(){this._initUpdateInterval()}};r([o()],a.prototype,"connection",void 0),r([o()],a.prototype,"layer",void 0),r([o()],a.prototype,"layerView",void 0),r([o({readOnly:!0})],a.prototype,"updating",null),a=r([l("esri.layers.graphics.controllers.StreamController")],a);const J=e=>{let t=class extends e{constructor(...i){super(...i),this.connectionError=null,this.connectionStatus="disconnected",this.filter=null}};return r([o({readOnly:!0})],t.prototype,"connectionError",void 0),r([o({aliasOf:"controller.connection.connectionStatus",readOnly:!0})],t.prototype,"connectionStatus",void 0),r([o({type:E})],t.prototype,"filter",void 0),t=r([l("esri.layers.mixins.StreamLayerView")],t),t};let s=class extends J(k(R(G))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=M.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.handles.add([this.watch("suspended",e=>{this.controller&&(e?this.controller.pauseStream():this.controller.resumeStream())})])}get connectionError(){const e=this.get("controller.connection.errorString");if(e)return new T("stream-controller",e)}createQuery(){return new U({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t==null?void 0:t.signal)}createController(){return new a({layer:this.layer,layerView:this})}beforeSetController(){}};r([o({readOnly:!0})],s.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],s.prototype,"connectionError",null),r([o()],s.prototype,"controller",void 0),r([o({readOnly:!0})],s.prototype,"hasZ",void 0),r([o({readOnly:!0})],s.prototype,"hasM",void 0),s=r([l("esri.views.3d.layers.StreamLayerView3D")],s);const et=s;export{et as default};
