import{kL as G,lL as b,bs as w,lM as A}from"./vendor.d1b93dad.js";function Z(n,a,e,t){if(t==null||n.hasZ||(t=void 0),n.type==="point")return n.x+=a,n.y+=e,n.hasZ&&t!=null&&(n.z+=t),n;if(n.type==="multipoint"){const x=n.points;for(let s=0;s<x.length;s++)x[s]=B(x[s],a,e,t);return n}if(n.type==="extent")return n.xmin+=a,n.xmax+=a,n.ymin+=e,n.ymax+=e,t!=null&&(n.zmin+=t,n.zmax+=t),n;const m=b(n),o=n.type==="polyline"?n.paths:n.rings;for(let x=0;x<m.length;x++){const s=m[x];for(let i=0;i<s.length;i++)s[i]=B(s[i],a,e,t)}return"paths"in n?n.paths=o:n.rings=o,n}function I(n,a,e,t,m){const o=n.clone(),x=t.resolution;if(o.type==="point"){if(m)Z(o,a*x,-e*x);else{const s=t.state.transform,i=t.state.inverseTransform,l=s[0]*o.x+s[2]*o.y+s[4],y=s[1]*o.x+s[3]*o.y+s[5];o.x=i[0]*(l+a)+i[2]*(y+e)+i[4],o.y=i[1]*(l+a)+i[3]*(y+e)+i[5]}return o}if(o.type==="multipoint"){if(m)Z(o,a*x,-e*x);else{const s=o.points,i=t.state.transform,l=t.state.inverseTransform;for(let y=0;y<s.length;y++){const c=s[y],p=i[0]*c[0]+i[2]*c[1]+i[4],M=i[1]*c[0]+i[3]*c[1]+i[5],f=l[0]*(p+a)+l[2]*(M+e)+l[4],u=l[1]*(p+a)+l[3]*(M+e)+l[5];s[y]=q(c,f,u,void 0)}}return o}if(o.type==="extent"){if(m)Z(o,a*x,-e*x);else{const s=t.state.transform,i=t.state.inverseTransform,l=s[0]*o.xmin+s[2]*o.ymin+s[4],y=s[1]*o.xmin+s[3]*o.ymin+s[5],c=s[0]*o.xmax+s[2]*o.ymax+s[4],p=s[1]*o.xmax+s[3]*o.ymax+s[5];o.xmin=i[0]*(l+a)+i[2]*(y+e)+i[4],o.ymin=i[1]*(l+a)+i[3]*(y+e)+i[5],o.xmax=i[0]*(c+a)+i[2]*(p+e)+i[4],o.ymax=i[1]*(c+a)+i[3]*(p+e)+i[5]}return o}if(m)Z(o,a*x,-e*x);else{const s=b(o),i=o.type==="polyline"?o.paths:o.rings,l=t.state.transform,y=t.state.inverseTransform;for(let c=0;c<s.length;c++){const p=s[c];for(let M=0;M<p.length;M++){const f=p[M],u=l[0]*f[0]+l[2]*f[1]+l[4],h=l[1]*f[0]+l[3]*f[1]+l[5],v=y[0]*(u+a)+y[2]*(h+e)+y[4],g=y[1]*(u+a)+y[3]*(h+e)+y[5];p[M]=q(f,v,g,void 0)}}"paths"in o?o.paths=i:o.rings=i}return o}function J(n,a,e,t){if(n.type==="point"){const{x:f,y:u}=n,h=t?t[0]:f,v=t?t[1]:u,g=n.clone(),d=(f-h)*a+h,r=(u-v)*e+v;return g.x=d,g.y=r,g}if(n.type==="multipoint"){const f=b(n),u=w(),[h,v,g,d]=A(u,[f]),r=t?t[0]:(h+g)/2,T=t?t[1]:(d+v)/2,z=n.clone(),k=z.points;for(let L=0;L<k.length;L++){const j=k[L],[C,D]=j,E=(C-r)*a+r,F=(D-T)*e+T;k[L]=q(j,E,F,void 0)}return z}if(n.type==="extent"){const{xmin:f,xmax:u,ymin:h,ymax:v}=n,g=t?t[0]:(f+u)/2,d=t?t[1]:(v+h)/2,r=n.clone();if(r.xmin=(f-g)*a+g,r.ymax=(v-d)*e+d,r.xmax=(u-g)*a+g,r.ymin=(h-d)*e+d,r.xmin>r.xmax){const T=r.xmin,z=r.xmax;r.xmin=z,r.xmax=T}if(r.ymin>r.ymax){const T=r.ymin,z=r.ymax;r.ymin=z,r.ymax=T}return r}const m=b(n),o=w(),[x,s,i,l]=A(o,m),y=t?t[0]:(x+i)/2,c=t?t[1]:(l+s)/2,p=n.clone(),M=p.type==="polyline"?p.paths:p.rings;for(let f=0;f<m.length;f++){const u=m[f];for(let h=0;h<u.length;h++){const v=u[h],[g,d]=v,r=(g-y)*a+y,T=(d-c)*e+c;M[f][h]=q(v,r,T,void 0)}}return"paths"in p?p.paths=M:p.rings=M,p}function K(n,a,e,t,m,o){const x=Math.sqrt((e-n)*(e-n)+(t-a)*(t-a));return Math.sqrt((m-n)*(m-n)+(o-a)*(o-a))/x}function N(n,a,e){const t=Math.atan2(a.y-e.y,a.x-e.x)-Math.atan2(n.y-e.y,n.x-e.x),m=Math.atan2(Math.sin(t),Math.cos(t));return G(m)}function B(n,a,e,t){return q(n,n[0]+a,n[1]+e,n[2]!=null&&t!=null?n[2]+t:void 0)}function q(n,a,e,t){const m=[a,e];return n.length>2&&m.push(t!=null?t:n[2]),n.length>3&&m.push(n[3]),m}export{K as a,J as i,N as m,Z as r,I as s};
